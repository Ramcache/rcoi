// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/applications": {
            "get": {
                "description": "Возвращает список всех загруженных приложений",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Получение списка всех приложений",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Application"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка получения приложений"
                    }
                }
            },
            "post": {
                "description": "Загружает новое приложение с файлом или URL",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Создание нового приложения",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название приложения",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Описание приложения",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "URL приложения",
                        "name": "url",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Файл приложения",
                        "name": "file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Application"
                        }
                    },
                    "400": {
                        "description": "Файл не найден"
                    },
                    "500": {
                        "description": "Ошибка создания приложения"
                    }
                }
            }
        },
        "/api/applications/{id}": {
            "get": {
                "description": "Возвращает приложение по указанному ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Получение приложения по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID приложения",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Application"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID приложения"
                    },
                    "404": {
                        "description": "Приложение не найдено"
                    }
                }
            },
            "put": {
                "description": "Обновляет данные приложения по указанному ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Обновление данных приложения",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID приложения",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновляемые данные приложения",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Application"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Application"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID или неверный формат запроса"
                    },
                    "500": {
                        "description": "Ошибка обновления приложения"
                    }
                }
            },
            "delete": {
                "description": "Удаляет приложение по указанному ID",
                "tags": [
                    "applications"
                ],
                "summary": "Удаление приложения",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID приложения",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Приложение удалено"
                    },
                    "400": {
                        "description": "Некорректный ID приложения"
                    },
                    "404": {
                        "description": "Приложение не найдено"
                    },
                    "500": {
                        "description": "Ошибка удаления приложения"
                    }
                }
            }
        },
        "/api/documents": {
            "get": {
                "description": "Возвращает список всех загруженных документов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Получение списка всех документов",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка получения документов"
                    }
                }
            },
            "post": {
                "description": "Загрузка документа на сервер",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Загрузка документа",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название документа",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файл документа",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Файл не найден"
                    },
                    "500": {
                        "description": "Ошибка загрузки файла"
                    }
                }
            }
        },
        "/api/documents/{id}": {
            "get": {
                "description": "Скачивание документа по его ID",
                "tags": [
                    "documents"
                ],
                "summary": "Скачивание документа по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID документа",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Файл для скачивания"
                    },
                    "400": {
                        "description": "Некорректный ID документа"
                    },
                    "404": {
                        "description": "Документ не найден"
                    }
                }
            },
            "delete": {
                "description": "Удаляет документ по указанному ID",
                "tags": [
                    "documents"
                ],
                "summary": "Удаление документа по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID документа",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Документ удален"
                    },
                    "400": {
                        "description": "Некорректный ID документа"
                    },
                    "500": {
                        "description": "Ошибка удаления документа"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "description": "Выход пользователя и удаление refresh-токена",
                "tags": [
                    "auth"
                ],
                "summary": "Выход пользователя",
                "responses": {
                    "200": {
                        "description": "Успешный выход"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/news": {
            "get": {
                "description": "Возвращает список всех новостей",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Получение списка всех новостей",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.News"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка получения новостей"
                    }
                }
            },
            "post": {
                "description": "Создаёт новую новость",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Создание новости",
                "parameters": [
                    {
                        "description": "Данные новости",
                        "name": "news",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.News"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.News"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса"
                    },
                    "500": {
                        "description": "Ошибка создания новости"
                    }
                }
            }
        },
        "/api/news/{id}": {
            "get": {
                "description": "Возвращает новость по указанному ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Получение новости по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID новости",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.News"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID"
                    },
                    "404": {
                        "description": "Новость не найдена"
                    }
                }
            },
            "put": {
                "description": "Обновляет новость по указанному ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Обновление новости по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID новости",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновляемые данные новости",
                        "name": "news",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.News"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.News"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID или неверный формат запроса"
                    },
                    "500": {
                        "description": "Ошибка обновления новости"
                    }
                }
            },
            "delete": {
                "description": "Удаляет новость по указанному ID",
                "tags": [
                    "news"
                ],
                "summary": "Удаление новости по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID новости",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Новость удалена"
                    },
                    "400": {
                        "description": "Некорректный ID"
                    },
                    "500": {
                        "description": "Ошибка удаления новости"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Авторизация пользователя по email и паролю",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "access_token": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "Обновляет access-токен с помощью refresh-токена",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновление access-токена",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "access_token": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Регистрация нового пользователя с email и паролем",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Application": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.News": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
